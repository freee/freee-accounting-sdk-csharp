/*
 * freee API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Freee.Accounting.Client.OpenAPIDateConverter;

namespace Freee.Accounting.Models
{
    /// <summary>
    /// ApprovalRequestResponseApprovalRequestApprovalFlowLogs
    /// </summary>
    [DataContract(Name = "approvalRequestResponse_approval_request_approval_flow_logs")]
    public partial class ApprovalRequestResponseApprovalRequestApprovalFlowLogs : IEquatable<ApprovalRequestResponseApprovalRequestApprovalFlowLogs>
    {
        /// <summary>
        /// 操作(apply: 申請, approve: 承認, force_approve: 代理承認, cancel: 取消, reject: 却下, feedback: 差戻し)
        /// </summary>
        /// <value>操作(apply: 申請, approve: 承認, force_approve: 代理承認, cancel: 取消, reject: 却下, feedback: 差戻し)</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ActionEnum
        {
            /// <summary>
            /// Enum Apply for value: apply
            /// </summary>
            [EnumMember(Value = "apply")]
            Apply = 1,

            /// <summary>
            /// Enum Approve for value: approve
            /// </summary>
            [EnumMember(Value = "approve")]
            Approve = 2,

            /// <summary>
            /// Enum ForceApprove for value: force_approve
            /// </summary>
            [EnumMember(Value = "force_approve")]
            ForceApprove = 3,

            /// <summary>
            /// Enum Cancel for value: cancel
            /// </summary>
            [EnumMember(Value = "cancel")]
            Cancel = 4,

            /// <summary>
            /// Enum Reject for value: reject
            /// </summary>
            [EnumMember(Value = "reject")]
            Reject = 5,

            /// <summary>
            /// Enum Feedback for value: feedback
            /// </summary>
            [EnumMember(Value = "feedback")]
            Feedback = 6

        }


        /// <summary>
        /// 操作(apply: 申請, approve: 承認, force_approve: 代理承認, cancel: 取消, reject: 却下, feedback: 差戻し)
        /// </summary>
        /// <value>操作(apply: 申請, approve: 承認, force_approve: 代理承認, cancel: 取消, reject: 却下, feedback: 差戻し)</value>
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = false)]
        public ActionEnum Action { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestResponseApprovalRequestApprovalFlowLogs" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApprovalRequestResponseApprovalRequestApprovalFlowLogs() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestResponseApprovalRequestApprovalFlowLogs" /> class.
        /// </summary>
        /// <param name="action">操作(apply: 申請, approve: 承認, force_approve: 代理承認, cancel: 取消, reject: 却下, feedback: 差戻し) (required).</param>
        /// <param name="updatedAt">更新日時(ISO8601形式) (required).</param>
        /// <param name="userId">ユーザーID (required).</param>
        public ApprovalRequestResponseApprovalRequestApprovalFlowLogs(ActionEnum action = default(ActionEnum), string updatedAt = default(string), int userId = default(int))
        {
            this.Action = action;
            // to ensure "updatedAt" is required (not null)
            if (updatedAt == null)
            {
                throw new ArgumentNullException("updatedAt is a required property for ApprovalRequestResponseApprovalRequestApprovalFlowLogs and cannot be null");
            }
            this.UpdatedAt = updatedAt;
            this.UserId = userId;
        }

        /// <summary>
        /// 更新日時(ISO8601形式)
        /// </summary>
        /// <value>更新日時(ISO8601形式)</value>
        [DataMember(Name = "updated_at", IsRequired = true, EmitDefaultValue = false)]
        public string UpdatedAt { get; set; }

        /// <summary>
        /// ユーザーID
        /// </summary>
        /// <value>ユーザーID</value>
        [DataMember(Name = "user_id", IsRequired = true, EmitDefaultValue = false)]
        public int UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApprovalRequestResponseApprovalRequestApprovalFlowLogs {\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApprovalRequestResponseApprovalRequestApprovalFlowLogs);
        }

        /// <summary>
        /// Returns true if ApprovalRequestResponseApprovalRequestApprovalFlowLogs instances are equal
        /// </summary>
        /// <param name="input">Instance of ApprovalRequestResponseApprovalRequestApprovalFlowLogs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApprovalRequestResponseApprovalRequestApprovalFlowLogs input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Action == input.Action ||
                    this.Action.Equals(input.Action)
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.UserId == input.UserId ||
                    this.UserId.Equals(input.UserId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Action.GetHashCode();
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                return hashCode;
            }
        }

    }

}
