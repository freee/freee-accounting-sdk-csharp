/*
 * freee API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Freee.Accounting.Client.OpenAPIDateConverter;

namespace Freee.Accounting.Models
{
    /// <summary>
    /// ApprovalRequestFormResponseApprovalRequestFormValues
    /// </summary>
    [DataContract(Name = "approvalRequestFormResponse_approval_request_form_values")]
    public partial class ApprovalRequestFormResponseApprovalRequestFormValues : IEquatable<ApprovalRequestFormResponseApprovalRequestFormValues>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestFormResponseApprovalRequestFormValues" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApprovalRequestFormResponseApprovalRequestFormValues() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestFormResponseApprovalRequestFormValues" /> class.
        /// </summary>
        /// <param name="name">選択項目名 (required).</param>
        /// <param name="order">順序 (required).</param>
        public ApprovalRequestFormResponseApprovalRequestFormValues(string name = default(string), int order = default(int))
        {
            // to ensure "name" is required (not null)
            if (name == null) {
                throw new ArgumentNullException("name is a required property for ApprovalRequestFormResponseApprovalRequestFormValues and cannot be null");
            }
            this.Name = name;
            this.Order = order;
        }

        /// <summary>
        /// 選択項目名
        /// </summary>
        /// <value>選択項目名</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// 順序
        /// </summary>
        /// <value>順序</value>
        [DataMember(Name = "order", IsRequired = true, EmitDefaultValue = false)]
        public int Order { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApprovalRequestFormResponseApprovalRequestFormValues {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApprovalRequestFormResponseApprovalRequestFormValues);
        }

        /// <summary>
        /// Returns true if ApprovalRequestFormResponseApprovalRequestFormValues instances are equal
        /// </summary>
        /// <param name="input">Instance of ApprovalRequestFormResponseApprovalRequestFormValues to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApprovalRequestFormResponseApprovalRequestFormValues input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Order == input.Order ||
                    this.Order.Equals(input.Order)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Order.GetHashCode();
                return hashCode;
            }
        }

    }

}
