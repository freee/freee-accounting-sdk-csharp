/*
 * freee API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Freee.Accounting.Client.OpenAPIDateConverter;

namespace Freee.Accounting.Models
{
    /// <summary>
    /// ApprovalFlowRoutesIndexResponse
    /// </summary>
    [DataContract(Name = "approvalFlowRoutesIndexResponse")]
    public partial class ApprovalFlowRoutesIndexResponse : IEquatable<ApprovalFlowRoutesIndexResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalFlowRoutesIndexResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApprovalFlowRoutesIndexResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalFlowRoutesIndexResponse" /> class.
        /// </summary>
        /// <param name="approvalFlowRoutes">approvalFlowRoutes (required).</param>
        public ApprovalFlowRoutesIndexResponse(List<ApprovalFlowRoutesIndexResponseApprovalFlowRoutes> approvalFlowRoutes = default(List<ApprovalFlowRoutesIndexResponseApprovalFlowRoutes>))
        {
            // to ensure "approvalFlowRoutes" is required (not null)
            if (approvalFlowRoutes == null)
            {
                throw new ArgumentNullException("approvalFlowRoutes is a required property for ApprovalFlowRoutesIndexResponse and cannot be null");
            }
            this.ApprovalFlowRoutes = approvalFlowRoutes;
        }

        /// <summary>
        /// Gets or Sets ApprovalFlowRoutes
        /// </summary>
        [DataMember(Name = "approval_flow_routes", IsRequired = true, EmitDefaultValue = false)]
        public List<ApprovalFlowRoutesIndexResponseApprovalFlowRoutes> ApprovalFlowRoutes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApprovalFlowRoutesIndexResponse {\n");
            sb.Append("  ApprovalFlowRoutes: ").Append(ApprovalFlowRoutes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApprovalFlowRoutesIndexResponse);
        }

        /// <summary>
        /// Returns true if ApprovalFlowRoutesIndexResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ApprovalFlowRoutesIndexResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApprovalFlowRoutesIndexResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ApprovalFlowRoutes == input.ApprovalFlowRoutes ||
                    this.ApprovalFlowRoutes != null &&
                    input.ApprovalFlowRoutes != null &&
                    this.ApprovalFlowRoutes.SequenceEqual(input.ApprovalFlowRoutes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApprovalFlowRoutes != null)
                {
                    hashCode = (hashCode * 59) + this.ApprovalFlowRoutes.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
