/*
 * freee API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Freee.Accounting.Client.OpenAPIDateConverter;

namespace Freee.Accounting.Models
{
    /// <summary>
    /// ApprovalFlowRouteResponseApprovalFlowRouteSteps
    /// </summary>
    [DataContract(Name = "approvalFlowRouteResponse_approval_flow_route_steps")]
    public partial class ApprovalFlowRouteResponseApprovalFlowRouteSteps : IEquatable<ApprovalFlowRouteResponseApprovalFlowRouteSteps>
    {
        /// <summary>
        /// 承認方法( predefined_user: メンバー指定 (1人), selected_user: 申請時にメンバー指定,unspecified: 指定なし, and_resource: メンバー指定 (複数、全員の承認), or_resource: メンバー指定 (複数、1人の承認), and_position: 役職指定 (複数、全員の承認), or_position: 役職指定 (複数、1人の承認) ) 
        /// </summary>
        /// <value>承認方法( predefined_user: メンバー指定 (1人), selected_user: 申請時にメンバー指定,unspecified: 指定なし, and_resource: メンバー指定 (複数、全員の承認), or_resource: メンバー指定 (複数、1人の承認), and_position: 役職指定 (複数、全員の承認), or_position: 役職指定 (複数、1人の承認) ) </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResourceTypeEnum
        {
            /// <summary>
            /// Enum PredefinedUser for value: predefined_user
            /// </summary>
            [EnumMember(Value = "predefined_user")]
            PredefinedUser = 1,

            /// <summary>
            /// Enum SelectedUser for value: selected_user
            /// </summary>
            [EnumMember(Value = "selected_user")]
            SelectedUser = 2,

            /// <summary>
            /// Enum Unspecified for value: unspecified
            /// </summary>
            [EnumMember(Value = "unspecified")]
            Unspecified = 3,

            /// <summary>
            /// Enum AndResource for value: and_resource
            /// </summary>
            [EnumMember(Value = "and_resource")]
            AndResource = 4,

            /// <summary>
            /// Enum OrResource for value: or_resource
            /// </summary>
            [EnumMember(Value = "or_resource")]
            OrResource = 5,

            /// <summary>
            /// Enum AndPosition for value: and_position
            /// </summary>
            [EnumMember(Value = "and_position")]
            AndPosition = 6,

            /// <summary>
            /// Enum OrPosition for value: or_position
            /// </summary>
            [EnumMember(Value = "or_position")]
            OrPosition = 7

        }


        /// <summary>
        /// 承認方法( predefined_user: メンバー指定 (1人), selected_user: 申請時にメンバー指定,unspecified: 指定なし, and_resource: メンバー指定 (複数、全員の承認), or_resource: メンバー指定 (複数、1人の承認), and_position: 役職指定 (複数、全員の承認), or_position: 役職指定 (複数、1人の承認) ) 
        /// </summary>
        /// <value>承認方法( predefined_user: メンバー指定 (1人), selected_user: 申請時にメンバー指定,unspecified: 指定なし, and_resource: メンバー指定 (複数、全員の承認), or_resource: メンバー指定 (複数、1人の承認), and_position: 役職指定 (複数、全員の承認), or_position: 役職指定 (複数、1人の承認) ) </value>
        [DataMember(Name = "resource_type", IsRequired = true, EmitDefaultValue = false)]
        public ResourceTypeEnum ResourceType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalFlowRouteResponseApprovalFlowRouteSteps" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApprovalFlowRouteResponseApprovalFlowRouteSteps() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalFlowRouteResponseApprovalFlowRouteSteps" /> class.
        /// </summary>
        /// <param name="id">承認ステップID (required).</param>
        /// <param name="nextStepId">次の承認ステップID (required).</param>
        /// <param name="resourceType">承認方法( predefined_user: メンバー指定 (1人), selected_user: 申請時にメンバー指定,unspecified: 指定なし, and_resource: メンバー指定 (複数、全員の承認), or_resource: メンバー指定 (複数、1人の承認), and_position: 役職指定 (複数、全員の承認), or_position: 役職指定 (複数、1人の承認) )  (required).</param>
        /// <param name="userIds">承認者のユーザーID (配列).</param>
        public ApprovalFlowRouteResponseApprovalFlowRouteSteps(int id = default(int), int? nextStepId = default(int?), ResourceTypeEnum resourceType = default(ResourceTypeEnum), List<int> userIds = default(List<int>))
        {
            this.Id = id;
            // to ensure "nextStepId" is required (not null)
            if (nextStepId == null)
            {
                throw new ArgumentNullException("nextStepId is a required property for ApprovalFlowRouteResponseApprovalFlowRouteSteps and cannot be null");
            }
            this.NextStepId = nextStepId;
            this.ResourceType = resourceType;
            this.UserIds = userIds;
        }

        /// <summary>
        /// 承認ステップID
        /// </summary>
        /// <value>承認ステップID</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// 次の承認ステップID
        /// </summary>
        /// <value>次の承認ステップID</value>
        [DataMember(Name = "next_step_id", IsRequired = true, EmitDefaultValue = true)]
        public int? NextStepId { get; set; }

        /// <summary>
        /// 承認者のユーザーID (配列)
        /// </summary>
        /// <value>承認者のユーザーID (配列)</value>
        [DataMember(Name = "user_ids", EmitDefaultValue = false)]
        public List<int> UserIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApprovalFlowRouteResponseApprovalFlowRouteSteps {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  NextStepId: ").Append(NextStepId).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  UserIds: ").Append(UserIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApprovalFlowRouteResponseApprovalFlowRouteSteps);
        }

        /// <summary>
        /// Returns true if ApprovalFlowRouteResponseApprovalFlowRouteSteps instances are equal
        /// </summary>
        /// <param name="input">Instance of ApprovalFlowRouteResponseApprovalFlowRouteSteps to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApprovalFlowRouteResponseApprovalFlowRouteSteps input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.NextStepId == input.NextStepId ||
                    (this.NextStepId != null &&
                    this.NextStepId.Equals(input.NextStepId))
                ) && 
                (
                    this.ResourceType == input.ResourceType ||
                    this.ResourceType.Equals(input.ResourceType)
                ) && 
                (
                    this.UserIds == input.UserIds ||
                    this.UserIds != null &&
                    input.UserIds != null &&
                    this.UserIds.SequenceEqual(input.UserIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                if (this.NextStepId != null)
                {
                    hashCode = (hashCode * 59) + this.NextStepId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ResourceType.GetHashCode();
                if (this.UserIds != null)
                {
                    hashCode = (hashCode * 59) + this.UserIds.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
