/*
 * freee API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Freee.Accounting.Client.OpenAPIDateConverter;

namespace Freee.Accounting.Models
{
    /// <summary>
    /// SelectablesIndexResponse
    /// </summary>
    [DataContract(Name = "selectablesIndexResponse")]
    public partial class SelectablesIndexResponse : IEquatable<SelectablesIndexResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SelectablesIndexResponse" /> class.
        /// </summary>
        /// <param name="accountCategories">accountCategories.</param>
        /// <param name="accountGroups">決算書表示名（小カテゴリー）.</param>
        public SelectablesIndexResponse(List<SelectablesIndexResponseAccountCategories> accountCategories = default(List<SelectablesIndexResponseAccountCategories>), List<SelectablesIndexResponseAccountGroups> accountGroups = default(List<SelectablesIndexResponseAccountGroups>))
        {
            this.AccountCategories = accountCategories;
            this.AccountGroups = accountGroups;
        }

        /// <summary>
        /// Gets or Sets AccountCategories
        /// </summary>
        [DataMember(Name = "account_categories", EmitDefaultValue = false)]
        public List<SelectablesIndexResponseAccountCategories> AccountCategories { get; set; }

        /// <summary>
        /// 決算書表示名（小カテゴリー）
        /// </summary>
        /// <value>決算書表示名（小カテゴリー）</value>
        [DataMember(Name = "account_groups", EmitDefaultValue = false)]
        public List<SelectablesIndexResponseAccountGroups> AccountGroups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SelectablesIndexResponse {\n");
            sb.Append("  AccountCategories: ").Append(AccountCategories).Append("\n");
            sb.Append("  AccountGroups: ").Append(AccountGroups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SelectablesIndexResponse);
        }

        /// <summary>
        /// Returns true if SelectablesIndexResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SelectablesIndexResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SelectablesIndexResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountCategories == input.AccountCategories ||
                    this.AccountCategories != null &&
                    input.AccountCategories != null &&
                    this.AccountCategories.SequenceEqual(input.AccountCategories)
                ) && 
                (
                    this.AccountGroups == input.AccountGroups ||
                    this.AccountGroups != null &&
                    input.AccountGroups != null &&
                    this.AccountGroups.SequenceEqual(input.AccountGroups)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountCategories != null)
                {
                    hashCode = (hashCode * 59) + this.AccountCategories.GetHashCode();
                }
                if (this.AccountGroups != null)
                {
                    hashCode = (hashCode * 59) + this.AccountGroups.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
